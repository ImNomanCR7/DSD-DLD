
******************************** 1 ********************************
    module pulse_detector (input clk, rst, x, output reg y);
    
    localparam A = 3'b001;
    localparam B = 3'b010;
    localparam C = 3'b100;

    reg [2:0] state;

    always @(posedge clk or rst)
    begin
    if (rst) 
        state <= A;
    else
    state <= state;
    end

    always @(posedge clk or rst)
    begin 
    case (state)

    A : 
    begin 
        if (!x)
        state <= A;
        else
        state <= B;
    end
    
    B : 
    begin 
        if (!x)
        state <= C;
        else
        state <= B;
    end

    C : state <= A;

    endcase
    end

    always @(state)
    begin
        case (state)
        A : y <= 0;
        B : y <= 0;
        C : y <= 1;
        endcase
    end    
    endmodule
    
******************************** 2 ********************************


    module pulse_detector (input clk, rst, x, output reg y);
    
    localparam A = 2'b01;
    localparam B = 2'b10;

    reg [1:0] state;

    always @(posedge clk or posedge rst)
    begin
        if (rst)
        state <= A;
        else
        state <= state;
    end

    always @(posedge clk or negedge x)
    begin
    case (state)
        A : begin if (!x)
            state <= B;
            else
            state <= A;
        end

        B : state <= A;
        //B : next_state <= A;
        //default: state <= A;
    endcase
    end

    always @(posedge clk or negedge x)
    begin
        case (state)
        A : y = 0;
        B : begin if (!x)
             y = 1;
             else
             y = 0; 
            end 
        endcase
    end
    endmodule
